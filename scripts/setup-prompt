#!/usr/bin/env node

// Don't try to setup a prompt on the CI server
if (process.env.TRAVIS === 'true')
  process.exit(0);

var fs       = require('fs');
var exec     = require('child_process').exec;
var spawn    = require('child_process').spawn;
var readline = require('readline');

var userInput = readline.createInterface({
  input  : process.stdin,
  output : process.stdout
});

var PROMPT_DIR = process.env.HOME + '/.impromptu';

function printCommandOutput(data) {
  process.stdout.write(data.toString());
}

function npmInstallMyImpromptu() {
  console.log('NPM installing My Impromptu.');

  var install = spawn('npm', ['install'], {cwd: PROMPT_DIR});
  install.stdin.setEncoding = 'utf-8';
  install.stdout.pipe(process.stdout, {end: false});

  process.stdin.resume();
  process.stdin.pipe(install.stdin, {end: false});

  install.on('close', function(code) {
    if (code === 0) {
      console.log("You're all set!");
    }

    process.exit(code);
  });
}

function cloneMyImpromptu() {

  console.log('Cloning...');
  var commandArg = 'clone git@github.com:Impromptu/my-impromptu.git ' + PROMPT_DIR;
  var clone = spawn('git', commandArg.split(' '));
  clone.stdout.on('data', printCommandOutput);
  clone.stderr.on('data', printCommandOutput);

  clone.on('close', function(code) {
    if(code !== 0) {
      console.log('There was a problem with the clone. Exiting.');
      process.exit(code);
    }

    npmInstallMyImpromptu();
  });
}

function handleQuestionResponse(response) {
  if (/^n/i.test(response)) {
    console.log('Okay, please consult the Impromptu documentation if you need any help getting setup.');
    console.log('https://github.com/Impromptu/impromptu/tree/master/docs');
    process.exit(0);
  }

  cloneMyImpromptu();
}

if (fs.existsSync(PROMPT_DIR))
  process.exit(0);

console.log("You don't have a ~/.impromptu directory.");
userInput.question("Would you like help setting one up? (Y/n) ", handleQuestionResponse);
