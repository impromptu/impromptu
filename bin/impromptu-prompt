#!/usr/bin/env bash

# Okay, I get it. This file might look a little confusing.
# But I promise it makes sense.
#
# Both bash and zsh count color escape codes in the length of the prompt.
#
# Fortunately, both bash and zsh have a way to escape color codes in a prompt,
# so the length of the prompt can be calculated correctly. This allows you to
# do fun things like hit the up arrow or hit tab and have a normal prompt.
#
# Unfortunately, those escape codes are different. Bash ignores characters
# wrapped like "\[THIS\]", but zsh ignores stuff like "%{THIS%}". If you want
# to learn more about escape codes (have fun?), check out `src/color.coffee`.
#
# Fortunately, both bash and zsh can set commands to run right before the
# prompt is printed, which let us dynamically set the prompt.
#
# Unfortunately, there's no way for us to accurately determine which shell
# you're using (as the current shell may not be the environment `$SHELL`).
#
# But fortunately (strangely), the shells use different pre-prompt commands.
#
# So we set both commands: `PROMPT_COMMAND` for bash and `precmd` for zsh,
# and tell impromptu to escape the color codes for that specific shell.

if [[ -z "$IMPROMPTU_DIR" || ! -d "$IMPROMPTU_DIR" ]]; then
  export IMPROMPTU_DIR="$HOME/.impromptu"
fi

if [[ -z "$IMPROMPTU_PORT" ]]; then
  IMPROMPTU_PORT="1624"
fi

# Check for version or help commands
if [[ -n "$1" ]]; then
  if [[ "$1" == "-v" || "$1" == "--version" ]]; then
    $IMPROMPTU_BIN/impromptu-cli $1
  fi

  if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    $IMPROMPTU_BIN/impromptu-cli $1
  fi
fi

compiled_dir="$IMPROMPTU_DIR/.compiled"
pid_file="$compiled_dir/impromptu-server.pid"
impromptu_command="source $IMPROMPTU_BIN/impromptu-client"

ping_process() {
  kill -0 $(cat $pid_file) 2> /dev/null
  echo $?
}

# Start the server if it's not running.
# Check if the pid file exists and check if the process is still running.
if [[ ! -f $pid_file || $(ping_process) -ne 0 ]]; then
  # Ensure the `.compiled` directory exists.
  [ -d $compiled_dir ] || mkdir $compiled_dir

  # Start the impromptu server.
  # Ensure the server is detached from this process and save the PID.
  (
    nohup "$IMPROMPTU_BIN/impromptu-server" $IMPROMPTU_PORT >& /dev/null &
    echo "$!" > $pid_file
  )

  echo "Starting Impromptu server..."
  sleep 1

  if [ $(ping_process) -ne 0 ]; then
    echo "Could not start Impromptu server."
    echo "Port $IMPROMPTU_PORT may already be in use."
    echo "Using Impromptu CLI instead."

    impromptu_command="$IMPROMPTU_BIN/impromptu-cli"
  fi
fi

export PROMPT_COMMAND='PS1="$($impromptu_command bash)"'

precmd () {
  export PS1="$($impromptu_command zsh)"
}
