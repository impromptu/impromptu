#!/usr/bin/env bash

# Okay, I get it. This file might look a little confusing.
# But I promise it makes sense.
#
# Both bash and zsh count color escape codes in the length of the prompt.
#
# Fortunately, both bash and zsh have a way to escape color codes in a prompt,
# so the length of the prompt can be calculated correctly. This allows you to
# do fun things like hit the up arrow or hit tab and have a normal prompt.
#
# Unfortunately, those escape codes are different. Bash ignores characters
# wrapped like "\[THIS\]", but zsh ignores stuff like "%{THIS%}". If you want
# to learn more about escape codes (have fun?), check out `src/color.coffee`.
#
# Fortunately, both bash and zsh can set commands to run right before the
# prompt is printed, which let us dynamically set the prompt.
#
# Unfortunately, there's no way for us to accurately determine which shell
# you're using (as the current shell may not be the environment `$SHELL`).
#
# But fortunately (strangely), the shells use different pre-prompt commands.
#
# So we set both commands: `PROMPT_COMMAND` for bash and `precmd` for zsh,
# and tell impromptu to escape the color codes for that specific shell.

if [[ "$1" == "-v" || "$1" == "--version" ]]; then
  $IMPROMPTU_BIN/impromptu-cli $1
fi

export PROMPT_COMMAND='PS1="$($IMPROMPTU_BIN/impromptu-cli bash)"'

precmd () {
  export PS1="$($IMPROMPTU_BIN/impromptu-cli zsh)"
}
